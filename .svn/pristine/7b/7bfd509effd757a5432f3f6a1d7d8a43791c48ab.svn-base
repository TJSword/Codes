// pages/Vote/Vote.js
const app = getApp()
import { request, saveRequest } from '../../utils/util.js'
import * as echarts from '../../ec-canvas/echarts';
Page({
  /**
   * 页面的初始数据
   */
  data: {
    statusBarHeight: app.globalData.statusBarHeight,
    ec: {
      lazyLoad: false // 延迟加载
    }, //饼图
  },
  goBack: function (e) {//点击返回按钮 返回上一层页面
    wx.navigateTo({
      url: '../Index/Index',
    })
  },
  getInfo(){
    request('/vote/list','get',{}).then(res=>{
      console.log(res.searchResult[0])
      this.setData({
        voteInfo: res.searchResult[0],
        options: res.searchResult[0].optionsDOList
      })
      this.checkPerson(res.searchResult[0].id)
      this.getPieData()
    })
  },
  checkbox_change(e){
    console.log(e.detail.value)
    this.setData({
      chooseArr: e.detail.value
    })
  },
  raido_change(e){
    console.log(e.detail.value)
    let arr = []
    arr[0] = e.detail.value;
    this.setData({
      chooseArr: arr
    })
  },
  checkPerson(id){
    request('/vote/check/vote','get',{id:id}).then(res=>{
      console.log(res)
      if(res.code === 0){
        this.setData({
          voted:false
        })
      }else if(res.code === 200){
        this.setData({
          voted:true
        })
       setTimeout(_=>{
        this.piechartsComponnet = this.selectComponent('#mychart-dom-bar'); //饼图
       },100)
      }else if(res.code === 300){
        this.setData({
          voted:true
        })
        setTimeout(_=>{
          this.piechartsComponnet = this.selectComponent('#mychart-dom-bar'); //饼图
         },100)
        wx.showToast({
          title: '当前投票已截止~',
          icon:'none'
        })
      }else{
        this.setData({
          voted:true
        })
        setTimeout(_=>{
          this.piechartsComponnet = this.selectComponent('#mychart-dom-bar'); //饼图
         },100)
        wx.showToast({
          title: '未知异常，请联系管理员',
          icon:"none"
        })
      }
    })
  },
  submit(){
    if(this.data.chooseArr === undefined || this.data.chooseArr.length === 0){
      wx.showToast({
        title: '请选择你要投票的选项',
        icon:'none'
      })
    }else{
      saveRequest('/vote/vote','post',{
        voteId: this.data.voteInfo.id,
        optionIds:this.data.chooseArr
      }, 'application/json').then(res=>{
        console.log(res)
        if(res.code == 0){
          wx.showToast({
            title: '投票成功',
            icon:'none'
          })
          this.setData({
            voted:true
          })
          setTimeout(_=>{
            // this.piechartsComponnet = this.selectComponent('#mychart-dom-bar'); //饼图
            // this.init_pieCharts()
            this.getPieData()
          },100)
        }else{
          wx.showToast({
            title: '未知错误，请联系管理员',
            icon:'icon'
          })
        }
      })
    }
  },

  getPieData(){
    request('/vote/result','get',{
      voteId: this.data.voteInfo.id
    }).then(res=>{
      let arr = [];
      res.searchResult.forEach(item=>{
        item.joiner  = []
      })
      res.searchResult.forEach(item=>{
        item.operate.forEach(item1=>{
          item.joiner.push(item1.name)
        })
      })
      res.searchResult.forEach(item=>{
        arr.push({
          id:item.id,
          name:item.option,
          value:item.total,
          joiner:item.joiner.join('，')
        })
      })
      
      this.setData({
        pieData: arr
      })
      setTimeout(() => {
        this.piechartsComponnet = this.selectComponent('#mychart-dom-bar'); //饼图
        this.init_pieCharts()
      }, 50)
    })
  },

  //初始化图表--饼图
  init_pieCharts: function () {
    this.piechartsComponnet.init((canvas, width, height) => {
      // 初始化图表
      const pieChart = echarts.init(canvas, null, {
        width: width,
        height: height
      });
      pieChart.setOption(this.getPieOption());
      // 注意这里一定要返回 chart 实例，否则会影响事件处理等
      return pieChart;
    });
  },
  //饼图
  getPieOption: function () {
    var option = {
      tooltip: {
        show: true,
        formatter: params=>{
          wx.showToast({
            title: '投此选项的人：\n' + params.data.joiner,
            icon:'none'
          })
          return params.name + '：' + params.value + '（' + params.percent + '%）'
        }
      },
      color: ["#f4f1de", "#e07a5f", "#3d405b", "#81b29a", "#f2cc8f", "#eae2b7"],
      calculable: true,
      series: [{
        name: '分类',
        type: 'pie',
        center: ['50%', '50%'],
        radius: 80,
        legend: {
          orient: 'vertical',
          x: '70%',
          y: 'center',
          itemWidth: 20,
          itemHeight: 20,
          align: 'left',
          textStyle: {
            fontSize: 14,
            color: '#000'
          },
        },
        itemStyle: {
          normal: {
            label: {
              show: true,
              position: 'top',
              // formatter: function (params) {
              //   return (params.percent - 0).toFixed(0) + '%'
              // }
            },
            labelLine: {
              show: true
            }
          },
          // emphasis: {
          //   label: {
          //     show: true,
          //     formatter: "{b}\n{d}%"
          //   }
          // }
        },
        data: this.data.pieData
      }]
    };
    return option;
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function () {
   
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
    // setTimeout(_=>{
    //   this.piechartsComponnet = this.selectComponent('#mychart-dom-bar'); //饼图
    // },800)
  //  setTimeout(_=>{
  //   //  this.getPieData()
  //  },1000)
  //  this.getPieData()
    // this.init_pieCharts();

    this.getInfo(); //dom加载完毕=> 请求投票详情=> 请求拼图数据=> 实例化echarts
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {
    return{
      title: this.data.voteInfo.title,
      path: '/pages/Vote/Vote'
    }
  }
})